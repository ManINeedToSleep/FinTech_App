// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

/**
 * Database Schema
 * 
 * Core models:
 * User - Stores user account information and balance
 * Transaction - Records all financial operations
 * 
 * Relationships:
 * - One User has many Transactions
 * - Each Transaction belongs to one User
 * 
 * Note: Run 'npx prisma generate' after modifying this file
 */

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            Int           @id @default(autoincrement())
  email         String        @unique
  username      String        @unique
  passwordHash  String        @map("password_hash")
  firstName     String?       @map("first_name")
  lastName      String?       @map("last_name")
  accounts      Account[]
  transactions  Transaction[]
  createdAt     DateTime      @default(now()) @map("created_at")
  updatedAt     DateTime      @updatedAt @map("updated_at")

  @@map("users")
}

model Account {
  id           Int           @id @default(autoincrement())
  accountType  AccountType   @map("account_type")
  accountName  String        @map("account_name")
  balance      Float         @default(0.0)
  userId       Int          @map("user_id")
  user         User          @relation(fields: [userId], references: [id])
  transactions Transaction[]
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")

  @@map("accounts")
}

model Transaction {
  id          Int           @id @default(autoincrement())
  amount      Float
  type        TransactionType
  category    Category       @relation(fields: [categoryId], references: [id])
  categoryId  Int           @map("category_id")
  description String?
  accountId   Int           @map("account_id")
  account     Account        @relation(fields: [accountId], references: [id])
  userId      Int           @map("user_id")
  user        User           @relation(fields: [userId], references: [id])
  createdAt   DateTime       @default(now()) @map("created_at")
  updatedAt   DateTime       @updatedAt @map("updated_at")

  @@map("transactions")
}

model Category {
  id           Int           @id @default(autoincrement())
  name         String
  type         TransactionType
  icon         String?
  transactions Transaction[]
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")

  @@unique([name, type])
  @@map("categories")
}

enum AccountType {
  CHECKING
  SAVINGS
  INVESTMENT
}

enum TransactionType {
  DEPOSIT
  WITHDRAWAL
  TRANSFER
}